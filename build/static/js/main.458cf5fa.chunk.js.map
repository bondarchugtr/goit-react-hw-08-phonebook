{"version":3,"sources":["Components/PhoneContacts/PhoneContacts.module.scss","Components/Views/NavMenu.module.scss","Components/PhoneBook/PhoneBook.module.scss","Components/UserMenu/UserMenu.module.scss","Components/Filter/Filter.module.scss","style/utils/global.module.scss","Components/Forma/InputPhonebook.module.scss","redux/auth/auth-selector.js","redux/auth/auth-operations.js","Components/UserMenu/UserMenu.js","Components/Views/NavMenu.js","Components/AuthorizationHome/AuthorizationHome.js","Components/RegistryHome/RegisteryHome.js","Components/Route/PrivateRoute.js","Components/Route/PublicRoute.js","redux/telbook/action.js","redux/telbook/contacts-operation.js","redux/telbook/selector.js","Components/Forma/FormPhonebook.js","img/sprite.svg","Components/PhoneContacts/PhoneContacts.js","Components/Filter/Filter.js","Components/PhoneBook/PhoneBook.js","App.js","redux/telbook/reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUsername","user","name","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","UserMenu","useSelector","dispatch","useDispatch","className","s","user__text","type","onClick","authOperations","styleButton","Button","Layout","useState","activeLinkAuth","setActiveLinkAuth","activeLinkReg","setActiveLinkReg","nav__menu__container","nav__menu__item","to","nav__menu__text__dec","nav__menu__text","FormAuthorization","email","password","contact","setContact","handleChange","target","value","prev","reset","onSubmit","el","preventDefault","Forma","Forma__input","id","nanoid","required","onChange","Button__form","FormRegistration","nameinput","PrivateRoute","element","redirectTo","PublicRoute","restricted","addFilter","createAction","fetchContacts","addContact","number","deleteContact","contactid","delete","getContacts","contacts","items","getFilter","filter","Form","createSelector","toLowerCase","includes","handleInputChange","placeholder","pattern","title","ContactsList","delContact","isLogin","Contact__list","map","Contact__item","block__contact__item","width","height","block__contact__icon","href","sprite","Filter","filterContact","Filter__search","Filter__input","PhoneBook","filters","useEffect","availabilityContact","find","normalizedFilter","visibleContacts","PhoneBookBlock","console","log","alert","Contacts__title","length","e","currentTarget","Filter__text","App","globalScss","container","path","replace","itemReducer","createReducer","fulfilled","payload","action","loading","pending","rejected","filterReducer","combineReducers","authSlice","createSlice","initialState","extraReducers","authOperation","logger","createLogger","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","getDefaultMiddleware","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.458cf5fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact__list\":\"PhoneContacts_Contact__list__1azxW\",\"Contact__item\":\"PhoneContacts_Contact__item__13Qym\",\"Button\":\"PhoneContacts_Button__2Fvkh\",\"block__contact\":\"PhoneContacts_block__contact__1ymIp\",\"block__contact__item\":\"PhoneContacts_block__contact__item__2ETsT\",\"block__contact__icon\":\"PhoneContacts_block__contact__icon__2YCI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__menu__container\":\"NavMenu_nav__menu__container__2dcSh\",\"nav__menu__item\":\"NavMenu_nav__menu__item__1gj7Q\",\"nav__menu__text__dec\":\"NavMenu_nav__menu__text__dec__1GLYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__title\":\"PhoneBook_Contacts__title__1soz4\",\"Filter__text\":\"PhoneBook_Filter__text__2PMSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__1eynt\",\"user__text\":\"UserMenu_user__text__3RY4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__search\":\"Filter_Filter__search__1oJmY\",\"Filter__input\":\"Filter_Filter__input__1FUZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"global_container__1GSA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forma\":\"InputPhonebook_Forma__mMyPT\",\"Forma__input\":\"InputPhonebook_Forma__input__1AjOE\",\"nameinput\":\"InputPhonebook_nameinput__2MBVh\",\"Button__form\":\"InputPhonebook_Button__form__yveQA\"};","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\nexport default authSelectors;\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {}\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  }\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport styleButton from \"../PhoneContacts/PhoneContacts.module.scss\";\nimport s from \"./UserMenu.module.scss\";\nfunction UserMenu() {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={s.UserMenu}>\n        <div>\n          <span className={s.user__text}>Hello, {name}</span>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(authOperations.logOut())}\n          className={styleButton.Button}\n        >\n          Logout\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default UserMenu;\n","import React, { useState } from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport s from \"./NavMenu.module.scss\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n\nexport function Layout() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const [activeLinkAuth, setActiveLinkAuth] = useState(true);\n  const [activeLinkReg, setActiveLinkReg] = useState(false);\n\n  const handleClickAuth = () => {\n    setActiveLinkAuth(true);\n    setActiveLinkReg(false);\n  };\n\n  const handleClickReg = () => {\n    setActiveLinkAuth(false);\n    setActiveLinkReg(true);\n  };\n\n  return (\n    <header>\n      <nav>\n        {isLoggedIn ? (\n          <UserMenu />\n        ) : (\n          <div>\n            <ul className={s.nav__menu__container}>\n              <li className={s.nav__menu__item}>\n                <NavLink\n                  to=\"login\"\n                  className={\n                    activeLinkAuth ? s.nav__menu__text__dec : s.nav__menu__text\n                  }\n                  onClick={handleClickAuth}\n                >\n                  Authorization\n                </NavLink>\n              </li>\n              <li className={s.nav__menu__item}>\n                <NavLink\n                  to=\"register\"\n                  className={\n                    activeLinkReg ? s.nav__menu__text__dec : s.nav__menu__text\n                  }\n                  onClick={handleClickReg}\n                >\n                  Register\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )}\n      </nav>\n      <Outlet />\n    </header>\n  );\n}\n\nexport function NoMatch() {\n  return (\n    <div>\n      <h1>Nothing to see here!</h1>\n      <p>\n        <NavLink to=\"/\">Go to the home page</NavLink>\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\nimport s from \"../Forma/InputPhonebook.module.scss\";\n\nconst FormAuthorization = () => {\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const handleChange = ({ target: { name, value } }) => {\n    setContact((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    dispatch(authOperations.logIn({ ...contact }));\n    reset();\n  };\n  const reset = () => {\n    setContact({\n      email: \"\",\n      password: \"\",\n    });\n  };\n  return (\n    <div className=\"\">\n      {!isLoggedIn && (\n        <form onSubmit={handleSubmit} className={s.Forma}>\n          <label />\n          <span>login</span>\n          <input\n            className={s.Forma__input}\n            id={nanoid()}\n            type=\"text\"\n            name=\"email\"\n            value={contact.email}\n            required\n            onChange={handleChange}\n          />\n          <label />\n          <span>Password</span>\n\n          <input\n            className={s.Forma__input}\n            id={nanoid()}\n            type=\"text\"\n            name=\"password\"\n            value={contact.password}\n            required\n            onChange={handleChange}\n          />\n          <button type=\"submit\" className={s.Button__form}>\n            Login\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default FormAuthorization;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport s from \"../Forma/InputPhonebook.module.scss\";\nconst FormRegistration = () => {\n  // const [name, setName] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    setContact((prev) => ({ ...prev, [name]: value }));\n  };\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    dispatch(authOperations.register({ ...contact }));\n    reset();\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Forma}>\n        <label className={s.nameinput} />\n        <span>login</span>\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={contact.name}\n          required\n          onChange={handleChange}\n        />\n        <label className={s.nameinput} />\n        <span>Password</span>\n\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"password\"\n          value={contact.password}\n          required\n          onChange={handleChange}\n        />\n        <label />\n        <span>Email</span>\n\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"email\"\n          value={contact.email}\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className={s.Button__form}>\n          Registry\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default FormRegistration;\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n\nexport default function PrivateRoute({ element, redirectTo }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return <>{isLoggedIn ? element : <Navigate to={redirectTo} />}</>;\n}\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n// import { onError } from \"../../utilits/messages\";\n\nexport default function PublicRoute({\n  redirectTo,\n  restricted = false,\n  element,\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  if (!redirectTo && restricted) {\n    // onError(\"No path for redirect\");\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>{isLoggedIn && restricted ? <Navigate to={redirectTo} /> : element}</>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addFilter = createAction(\"contacts/addFilter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContacts\",\n  async (name) => {\n    const contact = {\n      name: name.name,\n      number: name.number,\n    };\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactid) => {\n    try {\n      await axios.delete(`/contacts/${contactid}`);\n      return contactid;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const loading = (state) => state.loading;\n\nexport const filterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from \"react\";\nimport s from \"./InputPhonebook.module.scss\";\nimport { nanoid } from \"nanoid\";\n\nconst Form = ({ onSubmit }) => {\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"\",\n  });\n  const handleInputChange = (prev) => {\n    const { name, value } = prev.target;\n    setContact((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    onSubmit({ ...contact });\n    reset();\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Forma}>\n        <label className={s.nameinput} />\n        Name\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={contact.name}\n          placeholder=\"Ivan Petrov\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n        <label className={s.nameinput} />\n        Number\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"number\"\n          value={contact.number}\n          placeholder=\"+380990000000\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={s.Button__form}>\n          Add Contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","export default __webpack_public_path__ + \"static/media/sprite.48e8d233.svg\";","import PropTypes from \"prop-types\";\nimport s from \"./PhoneContacts.module.scss\";\nimport sprite from \"../../img/sprite.svg\";\nconst ContactsList = ({ contacts = [], delContact, isLogin }) => {\n  return (\n    <>\n      {!isLogin && (\n        <ul className={s.Contact__list}>\n          {contacts.map((el) => (\n            <li key={el.id} className={s.Contact__item}>\n              {/* <div className={s.block__contact}> */}\n              <div className={s.block__contact__item}>\n                <svg width={25} height={25} className={s.block__contact__icon}>\n                  <use href={sprite + \"#icon-user-tie\"} />\n                </svg>\n                <span> {el.name}</span>\n              </div>\n              <div className={s.block__contact__item}>\n                <svg width={25} height={25} className={s.block__contact__icon}>\n                  <use href={sprite + \"#icon-phone\"} />\n                </svg>\n                <span> {el.number}</span>\n              </div>\n              {/* </div> */}\n              <button\n                type=\"button\"\n                onClick={() => delContact(el.id)}\n                className={s.Button}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactsList;\n","import React from \"react\";\nimport s from \"./Filter.module.scss\";\nconst Filter = ({ filterContact, value }) => {\n  return (\n    <div>\n      <form className={s.Filter__search}>\n        <label>Search</label>\n        <input\n          className={s.Filter__input}\n          value={value}\n          onChange={filterContact}\n          placeholder=\"Enter your name\"\n        ></input>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { addFilter } from \"../../redux/telbook/action\";\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from \"../../redux/telbook/contacts-operation\";\n\nimport { getContacts, getFilter } from \"../../redux/telbook/selector.js\";\nimport Form from \"../Forma/FormPhonebook\";\nimport ContactsList from \"../PhoneContacts/PhoneContacts\";\nimport Filter from \"../Filter/Filter\";\nimport s from \"./PhoneBook.module.scss\";\nfunction PhoneBook() {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (fetchContacts) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch]);\n\n  const onSubmit = (data) => {\n    const contact = {\n      name: data.name,\n      number: data.number,\n    };\n    if (availabilityContact(contact.name)) {\n      console.log(contact.name);\n      return alert(`Name ${contact.name}already on your list\n      `);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  const availabilityContact = (value) => {\n    return contacts.find((el) => el.name === value);\n  };\n\n  const delContact = (id) => {\n    dispatch(deleteContact(id));\n  };\n\n  const filterContact = (e) => {\n    const { value } = e.currentTarget;\n    dispatch(addFilter(value));\n  };\n\n  const normalizedFilter = filters.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <div className={s.PhoneBookBlock}>\n        <Form onSubmit={onSubmit} />\n      </div>\n      <div>\n        <div>\n          <h2 className={s.Contacts__title}>Contacts</h2>\n          {contacts.length > 0 ? (\n            <Filter filterContact={filterContact} value={filters} />\n          ) : (\n            <p className={s.Filter__text}>No contacts🙁</p>\n          )}\n        </div>\n        <ContactsList contacts={visibleContacts} delContact={delContact} />\n      </div>\n    </>\n  );\n}\n\nexport default PhoneBook;\n","import { Route, Routes, Navigate } from \"react-router-dom\";\nimport { Layout } from \"./Components/Views/NavMenu\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport FormAuthorization from \"./Components/AuthorizationHome/AuthorizationHome\";\nimport FormRegistration from \"./Components/RegistryHome/RegisteryHome\";\nimport globalScss from \"./style/utils/global.module.scss\";\nimport PrivateRoute from \"./Components/Route/PrivateRoute\";\nimport PublicRoute from \"./Components/Route/PublicRoute\";\nimport PhoneBook from \"./Components/PhoneBook/PhoneBook\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    <div className={globalScss.container}>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\n          <Route\n            path=\"login\"\n            element={\n              <PublicRoute\n                element={<FormAuthorization />}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n            }\n          />\n          <Route\n            path=\"register\"\n            element={\n              <PublicRoute\n                element={<FormRegistration />}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n            }\n          />\n          <Route\n            path=\"contacts/*\"\n            element={\n              <PrivateRoute element={<PhoneBook />} redirectTo=\"/login\" />\n            }\n          />\n          {/* <Route path=\"*\" element={<NoMatch />} /> */}\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addFilter } from \"./action\";\n\nimport { fetchContacts, addContact, deleteContact } from \"./contacts-operation\";\nconst itemReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [addFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n  loading: loading,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperation from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperation.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperation.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperation.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperation.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport contactsReducer from \"../redux/telbook/reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-slice\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  REGISTER,\n  PURGE,\n  PERSIST,\n} from \"redux-persist\";\n\nconst logger = createLogger();\n\nconst middleware = {\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n  logger,\n};\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(middleware),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"modern-normalize\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}