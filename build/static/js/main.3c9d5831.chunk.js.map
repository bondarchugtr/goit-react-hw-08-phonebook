{"version":3,"sources":["Components/PhoneContacts/PhoneBook.module.css","Components/Filter/Filter.module.css","redux/telbook/action.js","redux/telbook/contacts-operation.js","redux/telbook/selector.js","Components/Forma/FormPhonebook.js","Components/PhoneContacts/PhoneContacts.js","Components/Filter/Filter.js","Components/PhoneBook/PhoneBook.js","App.js","redux/telbook/reducer.js","redux/store.js","index.js","Components/Forma/InputPhonebook.module.css","Components/PhoneBook/PhoneBook.module.css"],"names":["module","exports","addFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","contact","phone","number","post","deleteContact","id","delete","getFilter","state","contacts","filter","filterContacts","createSelector","items","toLowerCase","includes","Form","onSubmit","useState","setName","setNumber","handleInputChange","evt","target","value","reset","el","preventDefault","className","s","Forma","nameinput","Forma__input","nanoid","type","placeholder","pattern","title","required","onChange","Button__form","ContactsList","delContact","Contact__list","map","Contact__item","onClick","Button__remove","Filter","filterContact","Filter__search","Filter__input","PhoneBook","useSelector","filters","dispatch","useDispatch","useEffect","availabilityContact","find","normalizedFilter","visibleContacts","PhoneBookBlock","alert","Contacts__title","length","e","currentTarget","Filter__text","App","Container","itemReducer","createReducer","fulfilled","_","payload","action","loading","pending","rejected","filterReducer","combineReducers","middleware","createLogger","rootReducer","contactsReducer","store","configureStore","reducer","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c9d5831.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact__list\":\"PhoneBook_Contact__list__39gFN\",\"Contact__item\":\"PhoneBook_Contact__item__3HOKz\",\"Button__remove\":\"PhoneBook_Button__remove__J888H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__search\":\"Filter_Filter__search__26RSF\",\"Filter__input\":\"Filter_Filter__input__3v6lu\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addFilter = createAction(\"contacts/addFilter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// import // addContactRequest,\n// // addContactSuccess,\n// // addContactError,\n// // deleteContactRequest,\n// // deleteContactSuccess,\n// // deleteContactError,\n// // fetchContactsRequest,\n// // fetchContactsSuccess,\n// // fetchContactsError,\n// \"./action\";\naxios.defaults.baseURL =\n  \"https://61e892337ced4a00172ff620.mockapi.io/contacts/contacts\";\n\n// export const fetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n//   try {\n//     const { data } = await axios.get(\"/contacts\");\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error));\n//   }\n//   // // axios\n//   // //   .get(\"/contacts\")\n//   //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//   //   .catch((error) => dispatch(fetchContactsError(error)));\n// };\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n\n  async () => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\n// export const addContact = (name) => (dispatch) => {\n//   const contact = {\n//     name: name.name,\n//     phone: name.number,\n//     completed: false,\n//   };\n\n//   dispatch(addContactRequest());\n\n//   axios\n//     .post(\"/contacts\", contact)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch((error) => dispatch(addContactError(error)));\n// };\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContacts\",\n\n  async (name) => {\n    const contact = {\n      // id: nanoid(),\n      name: name.name,\n      phone: name.number,\n    };\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n// export const deleteContact = (id) => (dispatch) => {\n//   dispatch(deleteContactRequest);\n//   axios\n//     .delete(`/contacts/${id}`)\n//     .then(() => dispatch(deleteContactSuccess(id)))\n//     .catch((error) => dispatch(deleteContactError(error)));\n// };\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const loading = (state) => state.loading;\n\nexport const filterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from \"react\";\nimport s from \"./InputPhonebook.module.css\";\nimport { nanoid } from \"nanoid\";\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (evt) => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Forma}>\n        <label className={s.nameinput} />\n        Name\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Ivan Petrov\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n        <label className={s.nameinput} />\n        Number\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          placeholder=\"+380990000000\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={s.Button__form}>\n          Add Contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport s from \"./PhoneBook.module.css\";\n\nconst ContactsList = ({ contacts = [], delContact }) => {\n  return (\n    <ul className={s.Contact__list}>\n      {contacts.map((el) => (\n        <li key={el.id} className={s.Contact__item}>\n          <span>\n            {el.name} : {el.phone}\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => delContact(el.id)}\n            className={s.Button__remove}\n          >\n            Remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactsList;\n","import React from 'react';\nimport s from './Filter.module.css';\nconst Filter = ({ filterContact, value }) => {\n  return (\n    <div>\n      <form className={s.Filter__search}>\n        <label>Search</label>\n        <input\n          className={s.Filter__input}\n          value={value}\n          onChange={filterContact}\n          placeholder=\"Enter your name\"\n        ></input>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { addFilter } from \"../../redux/telbook/action\";\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from \"../../redux/telbook/contacts-operation\";\n\nimport { filterContacts, getFilter } from \"../../redux/telbook/selector.js\";\nimport Form from \"../Forma/FormPhonebook\";\nimport ContactsList from \"../PhoneContacts/PhoneContacts\";\nimport Filter from \"../Filter/Filter\";\nimport s from \"./PhoneBook.module.css\";\nfunction PhoneBook() {\n  const contacts = useSelector(filterContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (fetchContacts) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch]);\n\n  const onSubmit = (data) => {\n    const contact = {\n      name: data.name,\n      number: data.number,\n    };\n    if (availabilityContact(contact.name)) {\n      return alert(`Name ${contact.name}already on your list\n      `);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  const availabilityContact = (value) => {\n    return contacts.find((el) => el.name === value);\n  };\n\n  const delContact = (id) => {\n    dispatch(deleteContact(id));\n  };\n\n  const filterContact = (e) => {\n    const { value } = e.currentTarget;\n    dispatch(addFilter(value));\n  };\n\n  const normalizedFilter = filters.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <div className={s.PhoneBookBlock}>\n        <Form onSubmit={onSubmit} />\n      </div>\n      <div>\n        <div>\n          <h2 className={s.Contacts__title}>Contacts</h2>\n\n          {contacts.length > 0 ? (\n            <Filter filterContact={filterContact} value={filters} />\n          ) : (\n            <p className={s.Filter__text}>No contacts🙁</p>\n          )}\n        </div>\n        <ContactsList contacts={visibleContacts} delContact={delContact} />\n      </div>\n    </>\n  );\n}\n\nexport default PhoneBook;\n","import PhoneBook from \"./Components/PhoneBook/PhoneBook\";\nimport s from \"./Components/PhoneBook/PhoneBook.module.css\";\n\nfunction App() {\n  return (\n    <div className={s.Container}>\n      <PhoneBook />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addFilter } from \"./action\";\n\nimport { fetchContacts, addContact, deleteContact } from \"./contacts-operation\";\nconst itemReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [addFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n  loading: loading,\n});\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport contactsReducer from \"../redux/telbook/reducer\";\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  REGISTER,\n  PURGE,\n  PERSIST,\n} from \"redux-persist\";\n\nconst logger = createLogger();\nlet middleware = [];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = (getDefaultMiddleware) => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ];\n}\n\n// const middleware = {\n//   serializableCheck: {\n//     ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//   },\n// };\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(middleware),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const store = configureStore({\n//   reducer: persisterReducer,\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forma\":\"InputPhonebook_Forma__3orIP\",\"Forma__input\":\"InputPhonebook_Forma__input__1es7_\",\"nameinput\":\"InputPhonebook_nameinput__3g3SN\",\"Button__form\":\"InputPhonebook_Button__form__3p6Qc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PhoneBook_Container__2wQ_Z\",\"Contacts__title\":\"PhoneBook_Contacts__title__1uPsK\",\"Filter__text\":\"PhoneBook_Filter__text__3_4v4\"};"],"sourceRoot":""}