{"version":3,"sources":["Components/PhoneContacts/PhoneContacts.module.scss","Components/Views/NavMenu.module.scss","Components/PhoneBook/PhoneBook.module.scss","Components/Filter/Filter.module.scss","Components/UserMenu/UserMenu.module.scss","style/utils/global.module.scss","Components/Forma/InputPhonebook.module.scss","redux/telbook/action.js","redux/telbook/contacts-operation.js","redux/telbook/selector.js","Components/Forma/FormPhonebook.js","img/sprite.svg","Components/PhoneContacts/PhoneContacts.js","Components/Filter/Filter.js","Components/PhoneBook/PhoneBook.js","redux/auth/auth-selector.js","redux/auth/auth-operations.js","Components/Route/PrivateRoute.js","Components/UserMenu/UserMenu.js","Components/Views/NavMenu.js","Components/AuthorizationHome/AuthorizationHome.js","Components/RegistryHome/RegisteryHome.js","Components/Route/PublicRoute.js","App.js","redux/telbook/reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","addFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","contact","number","post","deleteContact","contactid","delete","getContacts","state","contacts","items","getFilter","filter","createSelector","toLowerCase","includes","Form","onSubmit","useState","setName","setNumber","handleInputChange","evt","target","value","reset","el","preventDefault","className","s","Forma","nameinput","Forma__input","id","nanoid","type","placeholder","pattern","title","required","onChange","Button__form","ContactsList","delContact","isLogin","Contact__list","map","Contact__item","block__contact__item","width","height","block__contact__icon","href","sprite","onClick","Button","Filter","filterContact","Filter__search","Filter__input","PhoneBook","useSelector","filters","dispatch","useDispatch","useEffect","availabilityContact","find","normalizedFilter","visibleContacts","PhoneBookBlock","console","log","alert","Contacts__title","length","e","currentTarget","Filter__text","authSelectors","getIsLoggedIn","auth","isLoggedIn","getUsername","user","token","headers","common","Authorization","register","credentials","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","PrivateRoute","element","redirectTo","to","UserMenu","user__text","authOperations","styleButton","Layout","activeLinkAuth","setActiveLinkAuth","activeLinkReg","setActiveLinkReg","nav__menu__container","nav__menu__item","nav__menu__text__dec","nav__menu__text","FormAuthorization","email","setEmail","password","setPassword","handleChange","useLocation","FormRegistration","PublicRoute","restricted","App","globalScss","container","path","replace","itemReducer","createReducer","fulfilled","payload","action","loading","pending","rejected","filterReducer","combineReducers","authSlice","createSlice","initialState","extraReducers","authOperation","logger","createLogger","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","getDefaultMiddleware","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50ddd4d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact__list\":\"PhoneContacts_Contact__list__1azxW\",\"Contact__item\":\"PhoneContacts_Contact__item__13Qym\",\"Button\":\"PhoneContacts_Button__2Fvkh\",\"block__contact\":\"PhoneContacts_block__contact__1ymIp\",\"block__contact__item\":\"PhoneContacts_block__contact__item__2ETsT\",\"block__contact__icon\":\"PhoneContacts_block__contact__icon__2YCI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__menu__container\":\"NavMenu_nav__menu__container__2dcSh\",\"nav__menu__item\":\"NavMenu_nav__menu__item__1gj7Q\",\"nav__menu__text__dec\":\"NavMenu_nav__menu__text__dec__1GLYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__title\":\"PhoneBook_Contacts__title__1soz4\",\"Filter__text\":\"PhoneBook_Filter__text__2PMSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__search\":\"Filter_Filter__search__1oJmY\",\"Filter__input\":\"Filter_Filter__input__1FUZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__1eynt\",\"user__text\":\"UserMenu_user__text__3RY4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"global_container__1GSA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forma\":\"InputPhonebook_Forma__mMyPT\",\"Forma__input\":\"InputPhonebook_Forma__input__1AjOE\",\"nameinput\":\"InputPhonebook_nameinput__2MBVh\",\"Button__form\":\"InputPhonebook_Button__form__yveQA\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addFilter = createAction(\"contacts/addFilter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContacts\",\n  async (name) => {\n    const contact = {\n      name: name.name,\n      number: name.number,\n    };\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactid) => {\n    try {\n      await axios.delete(`/contacts/${contactid}`);\n      return contactid;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const loading = (state) => state.loading;\n\nexport const filterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from \"react\";\nimport s from \"./InputPhonebook.module.scss\";\nimport { nanoid } from \"nanoid\";\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (evt) => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Forma}>\n        <label className={s.nameinput} />\n        Name\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Ivan Petrov\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n        <label className={s.nameinput} />\n        Number\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          placeholder=\"+380990000000\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={s.Button__form}>\n          Add Contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","export default __webpack_public_path__ + \"static/media/sprite.48e8d233.svg\";","import PropTypes from \"prop-types\";\nimport s from \"./PhoneContacts.module.scss\";\nimport sprite from \"../../img/sprite.svg\";\nconst ContactsList = ({ contacts = [], delContact, isLogin }) => {\n  return (\n    <>\n      {!isLogin && (\n        <ul className={s.Contact__list}>\n          {contacts.map((el) => (\n            <li key={el.id} className={s.Contact__item}>\n              {/* <div className={s.block__contact}> */}\n              <div className={s.block__contact__item}>\n                <svg width={25} height={25} className={s.block__contact__icon}>\n                  <use href={sprite + \"#icon-user-tie\"} />\n                </svg>\n                <span> {el.name}</span>\n              </div>\n              <div className={s.block__contact__item}>\n                <svg width={25} height={25} className={s.block__contact__icon}>\n                  <use href={sprite + \"#icon-phone\"} />\n                </svg>\n                <span> {el.number}</span>\n              </div>\n              {/* </div> */}\n              <button\n                type=\"button\"\n                onClick={() => delContact(el.id)}\n                className={s.Button}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactsList;\n","import React from \"react\";\nimport s from \"./Filter.module.scss\";\nconst Filter = ({ filterContact, value }) => {\n  return (\n    <div>\n      <form className={s.Filter__search}>\n        <label>Search</label>\n        <input\n          className={s.Filter__input}\n          value={value}\n          onChange={filterContact}\n          placeholder=\"Enter your name\"\n        ></input>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { addFilter } from \"../../redux/telbook/action\";\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from \"../../redux/telbook/contacts-operation\";\n\nimport { getContacts, getFilter } from \"../../redux/telbook/selector.js\";\nimport Form from \"../Forma/FormPhonebook\";\nimport ContactsList from \"../PhoneContacts/PhoneContacts\";\nimport Filter from \"../Filter/Filter\";\nimport s from \"./PhoneBook.module.scss\";\nfunction PhoneBook() {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (fetchContacts) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch]);\n\n  const onSubmit = (data) => {\n    const contact = {\n      name: data.name,\n      number: data.number,\n    };\n    if (availabilityContact(contact.name)) {\n      console.log(contact.name);\n      return alert(`Name ${contact.name}already on your list\n      `);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  const availabilityContact = (value) => {\n    return contacts.find((el) => el.name === value);\n  };\n\n  const delContact = (id) => {\n    dispatch(deleteContact(id));\n  };\n\n  const filterContact = (e) => {\n    const { value } = e.currentTarget;\n    dispatch(addFilter(value));\n  };\n\n  const normalizedFilter = filters.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <div className={s.PhoneBookBlock}>\n        <Form onSubmit={onSubmit} />\n      </div>\n      <div>\n        <div>\n          <h2 className={s.Contacts__title}>Contacts</h2>\n          {contacts.length > 0 ? (\n            <Filter filterContact={filterContact} value={filters} />\n          ) : (\n            <p className={s.Filter__text}>No contacts🙁</p>\n          )}\n        </div>\n        <ContactsList contacts={visibleContacts} delContact={delContact} />\n      </div>\n    </>\n  );\n}\n\nexport default PhoneBook;\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\nexport default authSelectors;\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {}\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  }\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { useSelector } from \"react-redux\";\nimport { Route, Routes, Redirect, Navigate } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n\nexport default function PrivateRoute({ element, redirectTo }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return <>{isLoggedIn ? element : <Navigate to={redirectTo} />}</>;\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PhoneBook from \"../PhoneBook/PhoneBook\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\nimport { useLocation } from \"react-router\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport styleButton from \"../PhoneContacts/PhoneContacts.module.scss\";\nimport PrivateRoute from \"../Route/PrivateRoute\";\nimport s from \"./UserMenu.module.scss\";\nfunction UserMenu() {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={s.UserMenu}>\n        <div>\n          <span className={s.user__text}>Hello, {name}</span>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(authOperations.logOut())}\n          className={styleButton.Button}\n        >\n          Logout\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default UserMenu;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink, useResolvedPath, useMatch, Outlet } from \"react-router-dom\";\nimport s from \"./NavMenu.module.scss\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n\nexport function Layout() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const [activeLinkAuth, setActiveLinkAuth] = useState(true);\n  const [activeLinkReg, setActiveLinkReg] = useState(false);\n\n  const handleClickAuth = () => {\n    setActiveLinkAuth(true);\n    setActiveLinkReg(false);\n  };\n\n  const handleClickReg = () => {\n    setActiveLinkAuth(false);\n    setActiveLinkReg(true);\n  };\n\n  return (\n    <header>\n      <nav>\n        {isLoggedIn ? (\n          <UserMenu />\n        ) : (\n          <div>\n            <ul className={s.nav__menu__container}>\n              <li className={s.nav__menu__item}>\n                <NavLink\n                  to=\"login\"\n                  className={\n                    activeLinkAuth ? s.nav__menu__text__dec : s.nav__menu__text\n                  }\n                  onClick={handleClickAuth}\n                >\n                  Authorization\n                </NavLink>\n              </li>\n              <li className={s.nav__menu__item}>\n                <NavLink\n                  to=\"register\"\n                  className={\n                    activeLinkReg ? s.nav__menu__text__dec : s.nav__menu__text\n                  }\n                  onClick={handleClickReg}\n                >\n                  Register\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )}\n      </nav>\n      <Outlet />\n    </header>\n  );\n}\n\nexport function NoMatch() {\n  return (\n    <div>\n      <h1>Nothing to see here!</h1>\n      <p>\n        <NavLink to=\"/\">Go to the home page</NavLink>\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n// import globalScss from \"../../style/utils/global.module.scss\";\nimport s from \"../Forma/InputPhonebook.module.scss\";\n\nconst FormAuthorization = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const location = useLocation();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    reset();\n  };\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return (\n    <div className=\"\">\n      {!isLoggedIn && (\n        <form onSubmit={handleSubmit} className={s.Forma}>\n          <label\n          // className={s.nameinput}\n          />\n          <span>login</span>\n          <input\n            className={s.Forma__input}\n            id={nanoid()}\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={handleChange}\n          />\n          <label\n          // className={s.nameinput}\n          />\n          <span>Password</span>\n\n          <input\n            className={s.Forma__input}\n            id={nanoid()}\n            type=\"text\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={handleChange}\n          />\n          <button type=\"submit\" className={s.Button__form}>\n            Login\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default FormAuthorization;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport s from \"../Forma/InputPhonebook.module.scss\";\nconst FormRegistration = () => {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (el) => {\n    el.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setPassword(\"\");\n    setEmail(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Forma}>\n        <label className={s.nameinput} />\n        <span>login</span>\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n        <label className={s.nameinput} />\n        <span>Password</span>\n\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"password\"\n          value={password}\n          required\n          onChange={handleChange}\n        />\n        <label />\n        <span>Email</span>\n\n        <input\n          className={s.Forma__input}\n          id={nanoid()}\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className={s.Button__form}>\n          Registry\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default FormRegistration;\n","import { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selector\";\n// import { onError } from \"../../utilits/messages\";\n\nexport default function PublicRoute({\n  redirectTo,\n  restricted = false,\n  element,\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  if (!redirectTo && restricted) {\n    // onError(\"No path for redirect\");\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>{isLoggedIn && restricted ? <Navigate to={redirectTo} /> : element}</>\n  );\n}\n","import { Route, Routes, Navigate } from \"react-router-dom\";\nimport { Layout } from \"./Components/Views/NavMenu\";\nimport { NoMatch } from \"./Components/Views/NavMenu\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport FormAuthorization from \"./Components/AuthorizationHome/AuthorizationHome\";\nimport FormRegistration from \"./Components/RegistryHome/RegisteryHome\";\nimport globalScss from \"./style/utils/global.module.scss\";\nimport PrivateRoute from \"./Components/Route/PrivateRoute\";\nimport PublicRoute from \"./Components/Route/PublicRoute\";\nimport PhoneBook from \"./Components/PhoneBook/PhoneBook\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    <div className={globalScss.container}>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\n          <Route\n            path=\"login\"\n            element={\n              <PublicRoute\n                element={<FormAuthorization />}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n            }\n          />\n          <Route\n            path=\"register\"\n            element={\n              <PublicRoute\n                element={<FormRegistration />}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n            }\n          />\n          <Route\n            path=\"contacts/*\"\n            element={\n              <PrivateRoute element={<PhoneBook />} redirectTo=\"/login\" />\n            }\n          />\n          {/* <Route path=\"*\" element={<NoMatch />} /> */}\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addFilter } from \"./action\";\n\nimport { fetchContacts, addContact, deleteContact } from \"./contacts-operation\";\nconst itemReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [addFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n  loading: loading,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperation from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperation.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperation.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperation.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperation.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport contactsReducer from \"../redux/telbook/reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-slice\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  REGISTER,\n  PURGE,\n  PERSIST,\n} from \"redux-persist\";\n\nconst logger = createLogger();\n\nconst middleware = {\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n  logger,\n};\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(middleware),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"modern-normalize\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}